// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oommoo.Data.Context;

#nullable disable

namespace Oommoo.Data.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Oommoo.Data.Entities.Activity", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("create_time");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("created_by");

                    b.Property<string>("IsDeleted")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Request")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("request");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("update_time");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("updated_by");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Id" }, "id_UNIQUE")
                        .IsUnique();

                    b.ToTable("activity", (string)null);
                });

            modelBuilder.Entity("Oommoo.Data.Entities.Contact", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .HasColumnType("text")
                        .HasColumnName("address");

                    b.Property<string>("Address2")
                        .HasColumnType("text")
                        .HasColumnName("address2");

                    b.Property<string>("City")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("city");

                    b.Property<string>("Country")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("country");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("create_time");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("created_by");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("EntityId")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("entity_id");

                    b.Property<string>("EntityType")
                        .IsRequired()
                        .HasColumnType("enum('USER','PRODUCTION_COMPANY','VENUE','SHOW','EVENT')")
                        .HasColumnName("entity_type");

                    b.Property<string>("IsDeleted")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Phone")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("phone");

                    b.Property<string>("Phone2")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("phone2");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("postal_code");

                    b.Property<bool?>("Primary")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("primary");

                    b.Property<bool>("Private")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("private");

                    b.Property<string>("State")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("state");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("update_time");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("updated_by");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Id" }, "id_UNIQUE")
                        .IsUnique()
                        .HasDatabaseName("id_UNIQUE1");

                    b.ToTable("contact", (string)null);
                });

            modelBuilder.Entity("Oommoo.Data.Entities.Event", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("create_time");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("DisplayImageUrl")
                        .HasColumnType("text")
                        .HasColumnName("display_image_url");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("end_date");

                    b.Property<string>("IsDeleted")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<bool>("Private")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("private");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("start_date");

                    b.Property<string>("Type")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("type");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("update_time");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("updated_by");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Id" }, "id_UNIQUE")
                        .IsUnique()
                        .HasDatabaseName("id_UNIQUE2");

                    b.ToTable("event", (string)null);
                });

            modelBuilder.Entity("Oommoo.Data.Entities.File", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("create_time");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("created_by");

                    b.Property<string>("EntityId")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("entity_id");

                    b.Property<string>("EntityType")
                        .IsRequired()
                        .HasColumnType("enum('USER','PRODUCTION_COMPANY','VENUE','SHOW','EVENT','REVIEW','WATCHLIST','WATCHLIST_ITEM')")
                        .HasColumnName("entity_type");

                    b.Property<string>("Filename")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("filename");

                    b.Property<string>("Filetype")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("filetype");

                    b.Property<string>("IsDeleted")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("path");

                    b.Property<bool?>("Private")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("private");

                    b.Property<double?>("Size")
                        .HasColumnType("double")
                        .HasColumnName("size");

                    b.Property<string>("Type")
                        .HasColumnType("text")
                        .HasColumnName("type");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("update_time");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("updated_by");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("url");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Id" }, "id_UNIQUE")
                        .IsUnique()
                        .HasDatabaseName("id_UNIQUE3");

                    b.ToTable("file", (string)null);
                });

            modelBuilder.Entity("Oommoo.Data.Entities.Like", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("create_time");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("created_by");

                    b.Property<string>("EntityId")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("entity_id");

                    b.Property<string>("EntityType")
                        .IsRequired()
                        .HasColumnType("enum('USER','PRODUCTION_COMPANY','PRODUCTION_COMPANY_USER','VENUE','SHOW','EVENT','REVIEW','WATCHLIST')")
                        .HasColumnName("entity_type");

                    b.Property<string>("IsDeleted")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("is_deleted");

                    b.Property<bool>("Private")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("private");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("update_time");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("updated_by");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("value");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Id" }, "id_UNIQUE")
                        .IsUnique()
                        .HasDatabaseName("id_UNIQUE4");

                    b.ToTable("like", (string)null);
                });

            modelBuilder.Entity("Oommoo.Data.Entities.ProductionCompany", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("create_time");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("DisplayImageUrl")
                        .HasColumnType("text")
                        .HasColumnName("display_image_url");

                    b.Property<DateTime?>("Founded")
                        .HasColumnType("datetime")
                        .HasColumnName("founded");

                    b.Property<string>("IsDeleted")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<bool>("Private")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("private");

                    b.Property<string>("Type")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("type");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("update_time");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("updated_by");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Id" }, "id_UNIQUE")
                        .IsUnique()
                        .HasDatabaseName("id_UNIQUE5");

                    b.ToTable("production_company", (string)null);
                });

            modelBuilder.Entity("Oommoo.Data.Entities.ProductionCompanyUser", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("create_time");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("created_by");

                    b.Property<string>("IsDeleted")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("is_deleted");

                    b.Property<bool>("Private")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("private");

                    b.Property<string>("ProductionCompanyId")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("production_company_id");

                    b.Property<string>("Role")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("role");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("update_time");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("updated_by");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Id" }, "id_UNIQUE")
                        .IsUnique()
                        .HasDatabaseName("id_UNIQUE6");

                    b.ToTable("production_company_user", (string)null);
                });

            modelBuilder.Entity("Oommoo.Data.Entities.Rating", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("create_time");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("created_by");

                    b.Property<string>("EventId")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("event_id");

                    b.Property<bool?>("Held")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("held");

                    b.Property<string>("IsDeleted")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("is_deleted");

                    b.Property<bool>("Private")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("private");

                    b.Property<string>("ReviewId")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("review_id");

                    b.Property<string>("ShowId")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("show_id");

                    b.Property<string>("ShowUserId")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("show_user_id");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("type");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("update_time");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("updated_by");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("user_id");

                    b.Property<int>("Value")
                        .HasColumnType("int")
                        .HasColumnName("value");

                    b.Property<string>("VenueId")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("venue_id");

                    b.Property<string>("VenueShowId")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("venue_show_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Id" }, "id_UNIQUE")
                        .IsUnique()
                        .HasDatabaseName("id_UNIQUE7");

                    b.ToTable("rating", (string)null);
                });

            modelBuilder.Entity("Oommoo.Data.Entities.Review", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("create_time");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("created_by");

                    b.Property<string>("DisplayImageUrl")
                        .HasColumnType("text")
                        .HasColumnName("display_image_url");

                    b.Property<string>("EventId")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("event_id");

                    b.Property<bool?>("Held")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("held");

                    b.Property<string>("IsDeleted")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("is_deleted");

                    b.Property<bool>("Private")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("private");

                    b.Property<string>("Review1")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("review");

                    b.Property<string>("ShowId")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("show_id");

                    b.Property<string>("ShowUserId")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("show_user_id");

                    b.Property<string>("Type")
                        .HasColumnType("enum('AUDIENCE','CRITIC')")
                        .HasColumnName("type");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("update_time");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("updated_by");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("user_id");

                    b.Property<string>("VenueId")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("venue_id");

                    b.Property<string>("VenueShowId")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("venue_show_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Id" }, "id_UNIQUE")
                        .IsUnique()
                        .HasDatabaseName("id_UNIQUE8");

                    b.ToTable("review", (string)null);
                });

            modelBuilder.Entity("Oommoo.Data.Entities.Show", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("id");

                    b.Property<string>("AgeRecommendation")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("age_recommendation");

                    b.Property<float>("AverageRating")
                        .HasColumnType("float")
                        .HasColumnName("average_rating");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("create_time");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("DisplayImageUrl")
                        .HasColumnType("text")
                        .HasColumnName("display_image_url");

                    b.Property<string>("Duration")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("duration");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("end_date");

                    b.Property<string>("IsDeleted")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("is_deleted");

                    b.Property<bool>("Private")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("private");

                    b.Property<string>("ProductionCompanyId")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("production_company_id");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("start_date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("title");

                    b.Property<string>("Type")
                        .HasColumnType("enum('THEATRE','DANCE','PERFORMANCE_ART','MUSIC')")
                        .HasColumnName("type");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("update_time");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("updated_by");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Id" }, "id_UNIQUE")
                        .IsUnique()
                        .HasDatabaseName("id_UNIQUE9");

                    b.ToTable("show", (string)null);
                });

            modelBuilder.Entity("Oommoo.Data.Entities.ShowUser", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("id");

                    b.Property<string>("AttendanceType")
                        .IsRequired()
                        .HasColumnType("enum('VENUE','PRODUCTION','CAST','CREW','CRITIC','AUDIENCE')")
                        .HasColumnName("attendance_type");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("create_time");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("created_by");

                    b.Property<string>("IsDeleted")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("is_deleted");

                    b.Property<string>("ShowId")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("show_id");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("update_time");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("updated_by");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("user_id");

                    b.Property<string>("VenueShowId")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("venue_show_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Id" }, "id_UNIQUE")
                        .IsUnique()
                        .HasDatabaseName("id_UNIQUE10");

                    b.ToTable("show_user", (string)null);
                });

            modelBuilder.Entity("Oommoo.Data.Entities.Tag", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("create_time");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("created_by");

                    b.Property<string>("EntityId")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("entity_id");

                    b.Property<string>("EntityType")
                        .IsRequired()
                        .HasColumnType("enum('USER','PRODUCTION_COMPANY','PRODUCTION_COMPANY_USER','VENUE','SHOW','EVENT','REVIEW','WATCHLIST')")
                        .HasColumnName("entity_type");

                    b.Property<string>("IsDeleted")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("is_deleted");

                    b.Property<bool>("Private")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("private");

                    b.Property<string>("Tag1")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("tag");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("update_time");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("updated_by");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Id" }, "id_UNIQUE")
                        .IsUnique()
                        .HasDatabaseName("id_UNIQUE11");

                    b.ToTable("tag", (string)null);
                });

            modelBuilder.Entity("Oommoo.Data.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("id");

                    b.Property<int>("Age")
                        .HasColumnType("int")
                        .HasColumnName("age");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("create_time");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("created_by");

                    b.Property<string>("DisplayImageUrl")
                        .HasColumnType("text")
                        .HasColumnName("display_image_url");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime")
                        .HasColumnName("dob");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("first_name");

                    b.Property<string>("FullName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("full_name");

                    b.Property<string>("Gender")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("gender");

                    b.Property<string>("IsDeleted")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("is_deleted");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("last_name");

                    b.Property<bool?>("LoggedIn")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("logged_in");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("middle_name");

                    b.Property<string>("Notes")
                        .HasColumnType("text")
                        .HasColumnName("notes");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("password");

                    b.Property<bool>("Private")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("private");

                    b.Property<string>("ResetCode")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("reset_code");

                    b.Property<string>("Role")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("role");

                    b.Property<string>("Subtype")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("subtype");

                    b.Property<string>("SystemId")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("system_id");

                    b.Property<string>("Type")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("type");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("update_time");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("updated_by");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("username");

                    b.Property<string>("VerificationCode")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("verification_code");

                    b.Property<string>("VerificationType")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("verification_type");

                    b.Property<bool?>("Verified")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("verified");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Email" }, "email")
                        .IsUnique();

                    b.HasIndex(new[] { "Id" }, "id_UNIQUE")
                        .IsUnique()
                        .HasDatabaseName("id_UNIQUE12");

                    b.ToTable("user", (string)null);
                });

            modelBuilder.Entity("Oommoo.Data.Entities.UserPermission", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("create_time");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("created_by");

                    b.Property<string>("EntityId")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("entity_id");

                    b.Property<string>("IsDeleted")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("enum('ADD_SHOW','EDIT_SHOW','ADD_USER','EDIT_USER','ADD_VENUE','EDIT_VENUE','ADD_REVIEW','EDIT_REVIEW','ADD_RATING','EDIT_RATING','ADD_EVENT','EDIT_EVENT','ADD_PRODUCTION_COMPANY','EDIT_PRODUCTION_COMPANY')")
                        .HasColumnName("name");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("update_time");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("updated_by");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Id" }, "id_UNIQUE")
                        .IsUnique()
                        .HasDatabaseName("id_UNIQUE13");

                    b.ToTable("user_permission", (string)null);
                });

            modelBuilder.Entity("Oommoo.Data.Entities.Venue", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("id");

                    b.Property<string>("Accessibility")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("accessibility");

                    b.Property<string>("Capacity")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("capacity");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("create_time");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("created_by");

                    b.Property<string>("CurrentManagement")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("current_management");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("DisplayImageUrl")
                        .HasColumnType("text")
                        .HasColumnName("display_image_url");

                    b.Property<string>("IsDeleted")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Location")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("location");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("OpenedOn")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("opened_on");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("phone_number");

                    b.Property<bool>("Private")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("private");

                    b.Property<string>("ShowScore")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("show_score");

                    b.Property<string>("Stagedoor")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("stage_door");

                    b.Property<string>("Type")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("type");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("update_time");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("updated_by");

                    b.Property<string>("VenueAddress")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("venue_address");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Id" }, "id_UNIQUE")
                        .IsUnique()
                        .HasDatabaseName("id_UNIQUE14");

                    b.ToTable("venue", (string)null);
                });

            modelBuilder.Entity("Oommoo.Data.Entities.VenueEvent", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("id");

                    b.Property<bool?>("Active")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("active");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("create_time");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("EventId")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("event_id");

                    b.Property<string>("IsDeleted")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("ShowId")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("show_id");

                    b.Property<string>("Type")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("type");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("update_time");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("updated_by");

                    b.Property<string>("VenueId")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("venue_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Id" }, "id_UNIQUE")
                        .IsUnique()
                        .HasDatabaseName("id_UNIQUE15");

                    b.ToTable("venue_event", (string)null);
                });

            modelBuilder.Entity("Oommoo.Data.Entities.VenueShow", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("id");

                    b.Property<bool?>("Active")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("active");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("create_time");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("date");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("EndTime")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("end_time");

                    b.Property<string>("EventId")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("event_id");

                    b.Property<string>("IsDeleted")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("ShowId")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("show_id");

                    b.Property<string>("StartTime")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("start_time");

                    b.Property<string>("Type")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("type");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("update_time");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("updated_by");

                    b.Property<string>("VenueEventId")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("venue_event_id");

                    b.Property<string>("VenueId")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("venue_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Id" }, "id_UNIQUE")
                        .IsUnique()
                        .HasDatabaseName("id_UNIQUE16");

                    b.ToTable("venue_show", (string)null);
                });

            modelBuilder.Entity("Oommoo.Data.Entities.VenueUser", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("create_time");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("created_by");

                    b.Property<string>("IsDeleted")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Role")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("role");

                    b.Property<string>("Type")
                        .HasColumnType("text")
                        .HasColumnName("type");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("update_time");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("updated_by");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("user_id");

                    b.Property<string>("VenueId")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("venue_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Id" }, "id_UNIQUE")
                        .IsUnique()
                        .HasDatabaseName("id_UNIQUE17");

                    b.ToTable("venue_user", (string)null);
                });

            modelBuilder.Entity("Oommoo.Data.Entities.Watchlist", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("create_time");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("DisplayImageUrl")
                        .HasColumnType("text")
                        .HasColumnName("display_image_url");

                    b.Property<string>("IsDeleted")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("is_deleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<bool>("Private")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("private");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("update_time");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("updated_by");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Id" }, "id_UNIQUE")
                        .IsUnique()
                        .HasDatabaseName("id_UNIQUE18");

                    b.ToTable("watchlist", (string)null);
                });

            modelBuilder.Entity("Oommoo.Data.Entities.WatchlistItem", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("create_time");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("created_by");

                    b.Property<string>("IsDeleted")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("is_deleted");

                    b.Property<int>("Position")
                        .HasColumnType("int")
                        .HasColumnName("position");

                    b.Property<bool>("Private")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("private");

                    b.Property<string>("ShowId")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("show_id");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime")
                        .HasColumnName("update_time");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("updated_by");

                    b.Property<string>("WatchlistId")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("watchlist_id");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Id" }, "id_UNIQUE")
                        .IsUnique()
                        .HasDatabaseName("id_UNIQUE19");

                    b.ToTable("watchlist_item", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
